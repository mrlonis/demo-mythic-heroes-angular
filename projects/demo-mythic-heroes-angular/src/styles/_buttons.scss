@use '~@angular/material' as mat;
@use 'sass:map';

@mixin all($config) {
  $color: mat.get-color-config($config);
  $typography: mat.get-typography-config($config);

  $accent: map.get($color, accent);
  $warn: map.get($color, warn);
  $primary: map.get($color, primary);
  $foreground: map.get($color, foreground);
  $focus-shadow: 0 0 2px;
  .button-row,
  .tag-list {
    display: flex;
    gap: 0.5rem;
  }

  .tag-list {
    margin-top: 0.5rem;
    flex-wrap: wrap;
    &.primary .tag {
      color: mat.get-color-from-palette($primary, darker);
    }
    &.accent .tag {
      color: mat.get-color-from-palette($accent, darker);
    }
    &.warn .tag {
      color: mat.get-color-from-palette($warn, darker);
    }
  }
  .button-row {
    &.right-align {
      justify-content: flex-end;
    }
  }

  .pill-button,
  .tag {
    display: flex;
    align-items: center;
    padding: 0.25rem 0.75rem;
    height: 1.5rem;
    border: none;

    font-weight: mat.font-weight($typography, button);
    font-size: mat.font-size($typography, button);
    font-family: mat.font-family($typography, button);
    box-sizing: border-box;

    mat-icon {
      height: 16px;
      width: 16px;
      font-size: 16px;
      margin-right: 8px;
    }

    &.icon-only {
      padding: 0.25rem 0.5rem;
      mat-icon {
        margin: 0;
      }
    }
    &:focus {
      outline: none;
      box-shadow: $focus-shadow;
    }
    &.primary {
      color: mat.get-color-from-palette($primary, darker);
    }
    &.accent {
      color: mat.get-color-from-palette($accent, darker);
    }
    &.warn {
      color: mat.get-color-from-palette($warn, darker);
    }
    &[disabled] {
      color: mat.get-color-from-palette($foreground, 'disabled-button');
    }
  }

  .pill-button {
    border-radius: 0.75rem;
    &.primary {
      background-color: mat.get-color-from-palette($primary, 100, 0.27);
    }
    &.accent {
      background-color: mat.get-color-from-palette($accent, 200, 0.27);
    }
    &.warn {
      background-color: mat.get-color-from-palette($warn, 200, 0.27);
    }
  }
  .tag {
    width: max-content;
    &.primary,
    .primary & {
      background-color: mat.get-color-from-palette($primary, 100, 0.34);
    }
    &.accent,
    .accent & {
      background-color: mat.get-color-from-palette($accent, 200, 0.34);
    }
    &.warn,
    .warn & {
      background-color: mat.get-color-from-palette($warn, 200, 0.34);
    }
  }
  // link-specific styling
  a.pill-button {
    width: fit-content;
    cursor: pointer;
  }

  // button-specific styling
  button.pill-button {
    cursor: pointer;
  }

  // allows custom-sized toggle buttons with material icons
  .mat-icon-toggle .mat-button-toggle-label-content {
    padding: 0 !important;
    text-align: center;
    width: 100%;
    line-height: 100%;
  }
}

.button-row {
  display: flex;
  gap: 0.5rem;
}

.button-row,
.mat-dialog-actions {
  &.right-align {
    justify-content: flex-end;
  }
}
